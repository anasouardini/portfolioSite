---
import Icon from 'astro-icon';
import {Image, Picture} from '@astrojs/image/components';
// type sharedT = {hostingAddress: string, sourceCodeAddress: string, mediaAddress: string}
const shared = {
    hostingAddress: 'anasouardini.online',
    sourceCodeAddress: 'https://www.github.com/segfaulty1',
    mediaAddress: '/media/projectsPreview',
};
const genLinks = (projectName)=>{
  return {
    mediaLink: `${shared.mediaAddress}/${projectName}.png`,
    previewLink: `https://${projectName}.${shared.hostingAddress}`,
    sourceCodeLink: `${shared.sourceCodeAddress}/${projectName}`,
  }
}

type projectItemsT = {
    card: {
        width: number;
        aspectRatio: string;
        mediaLink: string;
        previewLink: string;
        sourceCodeLink: string;
    };
    details: {
        title: string;
        idea: string;
        obstacles: string[][];
        tools: string[];
    };
}[];
const projectItems: projectItemsT = [
    {
        card: {
            width: 910,
            aspectRatio: '910:783',
            ...genLinks('snipshare'),
        },
        details: {
            title: 'SnipShare: snippet sharing',
            idea: `An app for sharing pieces of code with others. It also has the feature of granting access
                    to one's account to another person, which involves a bit of authentication and authorization.`,
            obstacles: [
                [
                    "I couldn't get google Auth to work",
                    "I've just gone through their documentation despite its longevity."
                ],
                [
                    "I was losing a lot of time on tiny mistakes that would require a lot of debugging.",
                    "I introduced TypeScript to the project which reduced the effectiveness of those pain points"
                ],
                [
                    `I got slowed down by the fact that I couldn't revert back to an old state.`,
                    `My Git commits weren't professional, but I learned how to write a proper commit, after which I got really
                    comfortable with browsing Git's history whenever I needed.`
                ],
                // [
                //     `I had to spend a lot of time convincing other people to use this project in order to give me feedback.`,
                //     `I overcame this problem thanks to a very kind person on discord, who recommended I add a way to easily
                //     navigate between accounts and default values in forms so that they're not required to think too much about
                //     it, etc. It worked like a charm, people actually enjoyed using it.`
                // ]
                      ],
            tools: [
                    'html', 'css', 'tailwind', 'js', 'react', 'react-icons', 'react-auto-animate', 'monaco editor',
                    'nodejs', 'expressjs', 'axios', 'bcrypt', 'multer', 'passportjs', 'jwt', 'google Auth2.0', 'SSE', 'zod',
                    'mysql', 'vite'
                  ],
        },
    },
    {
      card: {
          width: 977,
          aspectRatio: '977:744',
          ...genLinks('smartteam'),
      },
      details: {
        title: 'SmartTeam: for managing teams/projects',
        idea: `I initially developed a typical task management application (a to-do app), but I found it too simple to put on a portfolio.
                As a result, I decided to create a more comprehensive version that not only manages tasks but also organizes
                them within projects and groups of projects.`,
        obstacles: [
          [
            `The Structure of the Database Was Confusing, and I Struggled to Grasp It.`,
            `To tackle this challenge, I utilized a whiteboard tool to jot down my ideas, compare them, and filter
             out the less viable ones. This approach helped me start working on the project promptly.`
          ],
          [
            `I Encountered Difficulties Working Within the Inherently Restrictive Nature of the REST Protocol.`,
            `At times, adhering strictly to standards can impede progress. I had to explore alternative approaches
             to overcome these limitations and find workarounds.`
          ],
          [
            `The Complexity of the Project Eventually Became Overwhelming, Hindering Further Progress.`,
            `Realizing that the accumulated complexity was becoming a hindrance, I recognized the need for refactoring.
             I understood the importance of incorporating refactoring into my development process at more frequent intervals.`
          ]
        ],
        tools: [
                'html', 'css', 'tailwind', 'js', 'react', 'react-icons', 'react-query', 'react-table', 'typescript',
                'nodejs', 'expressjs', 'axios', 'Oauth(google & github)', 'jwt', 'Bcrypt', 'nodemailer', 'mysql', 'vite'
                ],
      },
    },
    {
      card: {
        width: 837,
        aspectRatio: '837:767',
        ...genLinks('algolizer'),
      },
      details: {
          title: 'Algolizer: algorithms visualizer',
          idea: `The project aims to highlight the "performance" differences among algorithms and data structures. It
                 provides a visual representation that facilitates the identification of these differences, emphasizing
                 that the matter is not simply black and white, and it extends beyond optimizing CPU cycles.`,
          obstacles: [
            [
              `I Couldn't Get Each Algorithm To Run In A Separate Thread (Web Worker) Without Spending Too Much Time.`,
              `To address this issue, I developed a custom "context switcher" as a solution, inadvertently reinventing
                the wheel. However, this implementation allowed me to effectively manage running each algorithm in a separate
                thread, saving valuable time.`
            ],
            [
              `I Got Overwhelmed By the Project's Numerous Components.`,
              `To alleviate this challenge, I adopted a divide-and-conquer approach by extracting the problematic
               logic and implementing it in an online sandbox. This approach greatly facilitated the debugging process
               and improved overall project management.`
            ]
          ],
          tools: ['html', 'css', 'tailwind', 'js', 'react', 'typescript', 'react-chartjs-2'],
      },
    },
];
---

<section
    aria-label="projects"
    id="portfolio"
    class="text-slate-50 pt-[6rem] px-main xs>:px-4 overflow-y-hidden"
>
    <h2
        class={`text-center capitalize text-2xl relative
              before:absolute
              before:border-b-4 before:border-b-primary
              before:w-[2.1rem] before:h-[48px]`}
    >
        My <span class="text-primary">portfolio</span>
    </h2>

    {
        projectItems.map((item) => {
            return (
                <>
                    <div
                        aria-label="project box"
                        class="flex flex-col"
                    >
                        <div
                            aria-label="project preview"
                            class="grow basis-0 flex flex-col items-center mt-[3rem] animate-loadFromUp"
                        >
                            <Picture
                                class="min-w-[280px] sxs>:min-w-0 max-w-[40rem]"
                                widths={[400, 600, 800]}
                                aspectRatio={item.card.aspectRatio}
                                formats={['webp']}
                                src={`${item.card.mediaLink}`}
                                alt="project image"
                            />

                        </div>

                        <div
                            aria-label="project details"
                            class="grow basis-0 min-w-[250px] mt-[3rem] animate-loadFromDown"
                        >
                            <h3 class="capitalize mb-2 text-xl">{item.details.title}</h3>
                            <p class="first-letter:uppercase text-gray-400 max-w-[40rem]">
                                {item.details.idea}
                            </p>
                            {/*check project buttons*/}
                            <div
                                aria-label="live preview and source code links"
                                class="w-full flex-wrap flex gap-4 my-5"
                            >
                                {[
                                    // ['preview', 'ic:round-remove-red-eye', item.card.previewLink],
                                    [
                                        'preview',
                                        'ic:twotone-remove-red-eye',
                                        item.card.previewLink,
                                        <svg viewBox="0 0 24 24" class="w-8 mr-1 inline group-hover:scale-[1.2] duration-300"
                                            astro-icon="ic:twotone-remove-red-eye">
                                            <path fill="currentColor"
                                                d="M12 6.5A9.77 9.77 0 0 0 3.18 12c1.65 3.37 5.02 5.5 8.82 5.5s7.17-2.13 8.82-5.5A9.77 9.77 0 0 0 12 6.5zm0 10c-2.48 0-4.5-2.02-4.5-4.5S9.52 7.5 12 7.5s4.5 2.02 4.5 4.5-2.02 4.5-4.5 4.5z"
                                                opacity=".3" />
                                            <path fill="currentColor"
                                                d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zm0 13A9.77 9.77 0 0 1 3.18 12C4.83 8.63 8.21 6.5 12 6.5s7.17 2.13 8.82 5.5A9.77 9.77 0 0 1 12 17.5zm0-10c-2.48 0-4.5 2.02-4.5 4.5s2.02 4.5 4.5 4.5 4.5-2.02 4.5-4.5-2.02-4.5-4.5-4.5zm0 7a2.5 2.5 0 0 1 0-5 2.5 2.5 0 0 1 0 5z" />
                                        </svg>
                                    ],
                                    [
                                        'code', 
                                        'ph:code',
                                        item.card.sourceCodeLink,
                                        <svg
                                            viewBox="0 0 256 256"
                                            class="w-8 mr-1 inline group-hover:scale-[1.2] duration-300"
                                            astro-icon="ph:code"
                                        >
                                            <path
                                                fill="currentColor"
                                                d="M69.1 94.1 28.5 128l40.6 33.9a7.9 7.9 0 0 1 1.1 11.2A8.1 8.1 0 0 1 64 176a7.7 7.7 0 0 1-5.1-1.9l-48-40a7.9 7.9 0 0 1 0-12.2l48-40a8 8 0 1 1 10.2 12.2zm176 27.8-48-40a8 8 0 0 0-10.2 12.2l40.6 33.9-40.6 33.9A8 8 0 0 0 192 176a7.7 7.7 0 0 0 5.1-1.9l48-40a7.9 7.9 0 0 0 0-12.2zm-82.4-89.4a7.9 7.9 0 0 0-10.2 4.8l-64 176a7.9 7.9 0 0 0 4.8 10.2 8.6 8.6 0 0 0 2.7.5 7.9 7.9 0 0 0 7.5-5.3l64-176a7.9 7.9 0 0 0-4.8-10.2z"
                                            />
                                        </svg>,
                                    ]
                                ].map((button) => {
                                    return (
                                        <a
                                            href={button[2]}
                                            target='_blank'
                                            class="w-max text-primary border-[1px] border-primary px-3 py-1 rounded-xl
                                            subtleHoverSlider group"
                                        >
                                        <!--
                                            <Icon
                                                name={button[1]}
                                                class="w-8 mr-1 inline group-hover:scale-[1.2] duration-300"
                                            />
                                        -->
                                        {button[3]}
                                            {button[0]}
                                        </a>
                                    );
                                })}
                            </div>
                            <h4 class="capitalize text-lg mt-3 mb-2">
                                Obstacles I Faced
                            </h4>
                            <ul class="ml-3">
                                {item.details.obstacles.map((obs) => {
                                    return (
                                        <li>
                                            <h5 class="capitalize max-w-[40rem]">
                                                <span class="text-xl text-primary mr-2">
                                                    ⚡
                                                </span>
                                                {obs[0]}
                                            </h5>
                                            <p class="ml-3 max-w-[40rem] text-gray-400 first-letter:uppercase">
                                                {obs[1]}
                                            </p>
                                        </li>
                                    );
                                })}
                            </ul>

                            <h4 class="capitalize text-lg mt-3 mb-2">Tools Used</h4>
                            <ul class="flex flex-wrap gap-3 py-2 max-w-[40rem]">
                                {item.details.tools.map((tool) => {
                                    return (
                                        <li class="text-gray-400 border-primary border-[1px] rounded-xl px-3 hover:rotate-[2deg] hover:scale-[1.1] duration-300">
                                            {tool}
                                        </li>
                                    );
                                })}
                            </ul>
                        </div>
                    </div>
                </>
            );
        })
    }
</section>
